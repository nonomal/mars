// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.25.1
// source: types/types.proto

package types

import (
	reflect "reflect"
	sync "sync"

	mars "github.com/duc-cnzj/mars/api/v5/mars"
	websocket "github.com/duc-cnzj/mars/api/v5/websocket"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventActionType int32

const (
	EventActionType_Unknown  EventActionType = 0
	EventActionType_Create   EventActionType = 1
	EventActionType_Update   EventActionType = 2
	EventActionType_Delete   EventActionType = 3
	EventActionType_Upload   EventActionType = 4
	EventActionType_Download EventActionType = 5
	EventActionType_DryRun   EventActionType = 6
	// websocket 执行命令
	EventActionType_Shell        EventActionType = 7
	EventActionType_Login        EventActionType = 8
	EventActionType_CancelDeploy EventActionType = 9
	// SDK 执行命令
	EventActionType_Exec EventActionType = 10
)

// Enum value maps for EventActionType.
var (
	EventActionType_name = map[int32]string{
		0:  "Unknown",
		1:  "Create",
		2:  "Update",
		3:  "Delete",
		4:  "Upload",
		5:  "Download",
		6:  "DryRun",
		7:  "Shell",
		8:  "Login",
		9:  "CancelDeploy",
		10: "Exec",
	}
	EventActionType_value = map[string]int32{
		"Unknown":      0,
		"Create":       1,
		"Update":       2,
		"Delete":       3,
		"Upload":       4,
		"Download":     5,
		"DryRun":       6,
		"Shell":        7,
		"Login":        8,
		"CancelDeploy": 9,
		"Exec":         10,
	}
)

func (x EventActionType) Enum() *EventActionType {
	p := new(EventActionType)
	*p = x
	return p
}

func (x EventActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_types_types_proto_enumTypes[0].Descriptor()
}

func (EventActionType) Type() protoreflect.EnumType {
	return &file_types_types_proto_enumTypes[0]
}

func (x EventActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventActionType.Descriptor instead.
func (EventActionType) EnumDescriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{0}
}

type Deploy int32

const (
	Deploy_StatusUnknown   Deploy = 0
	Deploy_StatusDeploying Deploy = 1
	Deploy_StatusDeployed  Deploy = 2
	Deploy_StatusFailed    Deploy = 3
)

// Enum value maps for Deploy.
var (
	Deploy_name = map[int32]string{
		0: "StatusUnknown",
		1: "StatusDeploying",
		2: "StatusDeployed",
		3: "StatusFailed",
	}
	Deploy_value = map[string]int32{
		"StatusUnknown":   0,
		"StatusDeploying": 1,
		"StatusDeployed":  2,
		"StatusFailed":    3,
	}
)

func (x Deploy) Enum() *Deploy {
	p := new(Deploy)
	*p = x
	return p
}

func (x Deploy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Deploy) Descriptor() protoreflect.EnumDescriptor {
	return file_types_types_proto_enumTypes[1].Descriptor()
}

func (Deploy) Type() protoreflect.EnumType {
	return &file_types_types_proto_enumTypes[1]
}

func (x Deploy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Deploy.Descriptor instead.
func (Deploy) EnumDescriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{1}
}

type Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pod       string `protobuf:"bytes,2,opt,name=pod,proto3" json:"pod,omitempty"`
}

func (x *Pod) Reset() {
	*x = Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{0}
}

func (x *Pod) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Pod) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

type StateContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pod       string `protobuf:"bytes,2,opt,name=pod,proto3" json:"pod,omitempty"`
	Container string `protobuf:"bytes,3,opt,name=container,proto3" json:"container,omitempty"`
	// 在滚动更新的时候会出现新旧 pod，is_old 用来标识旧的即将被删除的 pod
	IsOld       bool `protobuf:"varint,4,opt,name=is_old,json=isOld,proto3" json:"is_old,omitempty"`
	Terminating bool `protobuf:"varint,5,opt,name=terminating,proto3" json:"terminating,omitempty"`
	Pending     bool `protobuf:"varint,6,opt,name=pending,proto3" json:"pending,omitempty"`
	Ready       bool `protobuf:"varint,7,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *StateContainer) Reset() {
	*x = StateContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateContainer) ProtoMessage() {}

func (x *StateContainer) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateContainer.ProtoReflect.Descriptor instead.
func (*StateContainer) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{1}
}

func (x *StateContainer) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *StateContainer) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *StateContainer) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *StateContainer) GetIsOld() bool {
	if x != nil {
		return x.IsOld
	}
	return false
}

func (x *StateContainer) GetTerminating() bool {
	if x != nil {
		return x.Terminating
	}
	return false
}

func (x *StateContainer) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

func (x *StateContainer) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type ServiceEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url      string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	PortName string `protobuf:"bytes,3,opt,name=port_name,json=portName,proto3" json:"port_name,omitempty"`
}

func (x *ServiceEndpoint) Reset() {
	*x = ServiceEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceEndpoint) ProtoMessage() {}

func (x *ServiceEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceEndpoint.ProtoReflect.Descriptor instead.
func (*ServiceEndpoint) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceEndpoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceEndpoint) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ServiceEndpoint) GetPortName() string {
	if x != nil {
		return x.PortName
	}
	return ""
}

type ChangelogModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Version          int32                   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Username         string                  `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Manifest         []string                `protobuf:"bytes,4,rep,name=manifest,proto3" json:"manifest,omitempty"`
	Config           string                  `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	ConfigChanged    bool                    `protobuf:"varint,6,opt,name=config_changed,json=configChanged,proto3" json:"config_changed,omitempty"`
	ProjectId        int64                   `protobuf:"varint,7,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GitProjectId     int64                   `protobuf:"varint,8,opt,name=git_project_id,json=gitProjectId,proto3" json:"git_project_id,omitempty"`
	Project          *ProjectModel           `protobuf:"bytes,9,opt,name=project,proto3" json:"project,omitempty"`
	GitProject       *GitProjectModel        `protobuf:"bytes,10,opt,name=git_project,json=gitProject,proto3" json:"git_project,omitempty"`
	Date             string                  `protobuf:"bytes,11,opt,name=date,proto3" json:"date,omitempty"`
	ConfigType       string                  `protobuf:"bytes,12,opt,name=config_type,json=configType,proto3" json:"config_type,omitempty"`
	GitBranch        string                  `protobuf:"bytes,13,opt,name=git_branch,json=gitBranch,proto3" json:"git_branch,omitempty"`
	GitCommit        string                  `protobuf:"bytes,14,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	DockerImage      string                  `protobuf:"bytes,15,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
	EnvValues        []*KeyValue             `protobuf:"bytes,16,rep,name=env_values,json=envValues,proto3" json:"env_values,omitempty"`
	ExtraValues      []*websocket.ExtraValue `protobuf:"bytes,17,rep,name=extra_values,json=extraValues,proto3" json:"extra_values,omitempty"`
	FinalExtraValues []*websocket.ExtraValue `protobuf:"bytes,18,rep,name=final_extra_values,json=finalExtraValues,proto3" json:"final_extra_values,omitempty"`
	GitCommitWebUrl  string                  `protobuf:"bytes,19,opt,name=git_commit_web_url,json=gitCommitWebUrl,proto3" json:"git_commit_web_url,omitempty"`
	GitCommitTitle   string                  `protobuf:"bytes,20,opt,name=git_commit_title,json=gitCommitTitle,proto3" json:"git_commit_title,omitempty"`
	GitCommitAuthor  string                  `protobuf:"bytes,21,opt,name=git_commit_author,json=gitCommitAuthor,proto3" json:"git_commit_author,omitempty"`
	GitCommitDate    string                  `protobuf:"bytes,22,opt,name=git_commit_date,json=gitCommitDate,proto3" json:"git_commit_date,omitempty"`
	CreatedAt        string                  `protobuf:"bytes,100,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                  `protobuf:"bytes,101,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt        string                  `protobuf:"bytes,102,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *ChangelogModel) Reset() {
	*x = ChangelogModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangelogModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangelogModel) ProtoMessage() {}

func (x *ChangelogModel) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangelogModel.ProtoReflect.Descriptor instead.
func (*ChangelogModel) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{3}
}

func (x *ChangelogModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChangelogModel) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ChangelogModel) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ChangelogModel) GetManifest() []string {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *ChangelogModel) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ChangelogModel) GetConfigChanged() bool {
	if x != nil {
		return x.ConfigChanged
	}
	return false
}

func (x *ChangelogModel) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ChangelogModel) GetGitProjectId() int64 {
	if x != nil {
		return x.GitProjectId
	}
	return 0
}

func (x *ChangelogModel) GetProject() *ProjectModel {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *ChangelogModel) GetGitProject() *GitProjectModel {
	if x != nil {
		return x.GitProject
	}
	return nil
}

func (x *ChangelogModel) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ChangelogModel) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *ChangelogModel) GetGitBranch() string {
	if x != nil {
		return x.GitBranch
	}
	return ""
}

func (x *ChangelogModel) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *ChangelogModel) GetDockerImage() string {
	if x != nil {
		return x.DockerImage
	}
	return ""
}

func (x *ChangelogModel) GetEnvValues() []*KeyValue {
	if x != nil {
		return x.EnvValues
	}
	return nil
}

func (x *ChangelogModel) GetExtraValues() []*websocket.ExtraValue {
	if x != nil {
		return x.ExtraValues
	}
	return nil
}

func (x *ChangelogModel) GetFinalExtraValues() []*websocket.ExtraValue {
	if x != nil {
		return x.FinalExtraValues
	}
	return nil
}

func (x *ChangelogModel) GetGitCommitWebUrl() string {
	if x != nil {
		return x.GitCommitWebUrl
	}
	return ""
}

func (x *ChangelogModel) GetGitCommitTitle() string {
	if x != nil {
		return x.GitCommitTitle
	}
	return ""
}

func (x *ChangelogModel) GetGitCommitAuthor() string {
	if x != nil {
		return x.GitCommitAuthor
	}
	return ""
}

func (x *ChangelogModel) GetGitCommitDate() string {
	if x != nil {
		return x.GitCommitDate
	}
	return ""
}

func (x *ChangelogModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ChangelogModel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ChangelogModel) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type EventModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Action    EventActionType `protobuf:"varint,2,opt,name=action,proto3,enum=types.EventActionType" json:"action,omitempty"`
	Username  string          `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Message   string          `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Old       string          `protobuf:"bytes,5,opt,name=old,proto3" json:"old,omitempty"`
	New       string          `protobuf:"bytes,6,opt,name=new,proto3" json:"new,omitempty"`
	Duration  string          `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	FileId    int32           `protobuf:"varint,8,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	File      *FileModel      `protobuf:"bytes,9,opt,name=file,proto3" json:"file,omitempty"`
	EventAt   string          `protobuf:"bytes,10,opt,name=event_at,json=eventAt,proto3" json:"event_at,omitempty"`
	HasDiff   bool            `protobuf:"varint,11,opt,name=has_diff,json=hasDiff,proto3" json:"has_diff,omitempty"`
	CreatedAt string          `protobuf:"bytes,100,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string          `protobuf:"bytes,101,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt string          `protobuf:"bytes,102,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *EventModel) Reset() {
	*x = EventModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventModel) ProtoMessage() {}

func (x *EventModel) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventModel.ProtoReflect.Descriptor instead.
func (*EventModel) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{4}
}

func (x *EventModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventModel) GetAction() EventActionType {
	if x != nil {
		return x.Action
	}
	return EventActionType_Unknown
}

func (x *EventModel) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *EventModel) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EventModel) GetOld() string {
	if x != nil {
		return x.Old
	}
	return ""
}

func (x *EventModel) GetNew() string {
	if x != nil {
		return x.New
	}
	return ""
}

func (x *EventModel) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *EventModel) GetFileId() int32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *EventModel) GetFile() *FileModel {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *EventModel) GetEventAt() string {
	if x != nil {
		return x.EventAt
	}
	return ""
}

func (x *EventModel) GetHasDiff() bool {
	if x != nil {
		return x.HasDiff
	}
	return false
}

func (x *EventModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EventModel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *EventModel) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type FileModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path           string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Size           int32  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Username       string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Namespace      string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pod            string `protobuf:"bytes,6,opt,name=pod,proto3" json:"pod,omitempty"`
	Container      string `protobuf:"bytes,7,opt,name=container,proto3" json:"container,omitempty"`
	Container_Path string `protobuf:"bytes,8,opt,name=container_Path,json=containerPath,proto3" json:"container_Path,omitempty"`
	HumanizeSize   string `protobuf:"bytes,9,opt,name=humanize_size,json=humanizeSize,proto3" json:"humanize_size,omitempty"`
	CreatedAt      string `protobuf:"bytes,100,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string `protobuf:"bytes,101,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt      string `protobuf:"bytes,102,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *FileModel) Reset() {
	*x = FileModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileModel) ProtoMessage() {}

func (x *FileModel) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileModel.ProtoReflect.Descriptor instead.
func (*FileModel) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{5}
}

func (x *FileModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileModel) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileModel) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileModel) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FileModel) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FileModel) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *FileModel) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *FileModel) GetContainer_Path() string {
	if x != nil {
		return x.Container_Path
	}
	return ""
}

func (x *FileModel) GetHumanizeSize() string {
	if x != nil {
		return x.HumanizeSize
	}
	return ""
}

func (x *FileModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FileModel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *FileModel) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type GitProjectModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DefaultBranch string       `protobuf:"bytes,2,opt,name=default_branch,json=defaultBranch,proto3" json:"default_branch,omitempty"`
	Name          string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	GitProjectId  int32        `protobuf:"varint,4,opt,name=git_project_id,json=gitProjectId,proto3" json:"git_project_id,omitempty"`
	Enabled       bool         `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	GlobalEnabled bool         `protobuf:"varint,6,opt,name=global_enabled,json=globalEnabled,proto3" json:"global_enabled,omitempty"`
	GlobalConfig  *mars.Config `protobuf:"bytes,7,opt,name=global_config,json=globalConfig,proto3" json:"global_config,omitempty"`
	CreatedAt     string       `protobuf:"bytes,100,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string       `protobuf:"bytes,101,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     string       `protobuf:"bytes,102,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *GitProjectModel) Reset() {
	*x = GitProjectModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitProjectModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitProjectModel) ProtoMessage() {}

func (x *GitProjectModel) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitProjectModel.ProtoReflect.Descriptor instead.
func (*GitProjectModel) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{6}
}

func (x *GitProjectModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GitProjectModel) GetDefaultBranch() string {
	if x != nil {
		return x.DefaultBranch
	}
	return ""
}

func (x *GitProjectModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GitProjectModel) GetGitProjectId() int32 {
	if x != nil {
		return x.GitProjectId
	}
	return 0
}

func (x *GitProjectModel) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GitProjectModel) GetGlobalEnabled() bool {
	if x != nil {
		return x.GlobalEnabled
	}
	return false
}

func (x *GitProjectModel) GetGlobalConfig() *mars.Config {
	if x != nil {
		return x.GlobalConfig
	}
	return nil
}

func (x *GitProjectModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GitProjectModel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GitProjectModel) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type ImagePullSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ImagePullSecret) Reset() {
	*x = ImagePullSecret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagePullSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePullSecret) ProtoMessage() {}

func (x *ImagePullSecret) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePullSecret.ProtoReflect.Descriptor instead.
func (*ImagePullSecret) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{7}
}

func (x *ImagePullSecret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MemberModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *MemberModel) Reset() {
	*x = MemberModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberModel) ProtoMessage() {}

func (x *MemberModel) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberModel.ProtoReflect.Descriptor instead.
func (*MemberModel) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{8}
}

func (x *MemberModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberModel) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type NamespaceModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Projects     []*ProjectModel `protobuf:"bytes,3,rep,name=projects,proto3" json:"projects,omitempty"`
	Favorite     bool            `protobuf:"varint,4,opt,name=favorite,proto3" json:"favorite,omitempty"`
	Description  string          `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Members      []*MemberModel  `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	Private      bool            `protobuf:"varint,7,opt,name=private,proto3" json:"private,omitempty"`
	CreatorEmail string          `protobuf:"bytes,8,opt,name=creator_email,json=creatorEmail,proto3" json:"creator_email,omitempty"`
	CreatedAt    string          `protobuf:"bytes,100,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string          `protobuf:"bytes,101,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt    string          `protobuf:"bytes,102,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *NamespaceModel) Reset() {
	*x = NamespaceModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceModel) ProtoMessage() {}

func (x *NamespaceModel) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceModel.ProtoReflect.Descriptor instead.
func (*NamespaceModel) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{9}
}

func (x *NamespaceModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NamespaceModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamespaceModel) GetProjects() []*ProjectModel {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *NamespaceModel) GetFavorite() bool {
	if x != nil {
		return x.Favorite
	}
	return false
}

func (x *NamespaceModel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NamespaceModel) GetMembers() []*MemberModel {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *NamespaceModel) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *NamespaceModel) GetCreatorEmail() string {
	if x != nil {
		return x.CreatorEmail
	}
	return ""
}

func (x *NamespaceModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *NamespaceModel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *NamespaceModel) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{10}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ProjectModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GitProjectId      int32                   `protobuf:"varint,3,opt,name=git_project_id,json=gitProjectId,proto3" json:"git_project_id,omitempty"`
	GitBranch         string                  `protobuf:"bytes,4,opt,name=git_branch,json=gitBranch,proto3" json:"git_branch,omitempty"`
	GitCommit         string                  `protobuf:"bytes,5,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	Config            string                  `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	OverrideValues    string                  `protobuf:"bytes,7,opt,name=override_values,json=overrideValues,proto3" json:"override_values,omitempty"`
	DockerImage       []string                `protobuf:"bytes,8,rep,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
	PodSelectors      []string                `protobuf:"bytes,9,rep,name=pod_selectors,json=podSelectors,proto3" json:"pod_selectors,omitempty"`
	NamespaceId       int32                   `protobuf:"varint,10,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Atomic            bool                    `protobuf:"varint,11,opt,name=atomic,proto3" json:"atomic,omitempty"`
	EnvValues         []*KeyValue             `protobuf:"bytes,12,rep,name=env_values,json=envValues,proto3" json:"env_values,omitempty"`
	ExtraValues       []*websocket.ExtraValue `protobuf:"bytes,13,rep,name=extra_values,json=extraValues,proto3" json:"extra_values,omitempty"`
	FinalExtraValues  []*websocket.ExtraValue `protobuf:"bytes,14,rep,name=final_extra_values,json=finalExtraValues,proto3" json:"final_extra_values,omitempty"`
	DeployStatus      Deploy                  `protobuf:"varint,15,opt,name=deploy_status,json=deployStatus,proto3,enum=types.Deploy" json:"deploy_status,omitempty"`
	HumanizeCreatedAt string                  `protobuf:"bytes,16,opt,name=humanize_created_at,json=humanizeCreatedAt,proto3" json:"humanize_created_at,omitempty"`
	HumanizeUpdatedAt string                  `protobuf:"bytes,17,opt,name=humanize_updated_at,json=humanizeUpdatedAt,proto3" json:"humanize_updated_at,omitempty"`
	ConfigType        string                  `protobuf:"bytes,18,opt,name=config_type,json=configType,proto3" json:"config_type,omitempty"`
	GitCommitWebUrl   string                  `protobuf:"bytes,19,opt,name=git_commit_web_url,json=gitCommitWebUrl,proto3" json:"git_commit_web_url,omitempty"`
	GitCommitTitle    string                  `protobuf:"bytes,20,opt,name=git_commit_title,json=gitCommitTitle,proto3" json:"git_commit_title,omitempty"`
	GitCommitAuthor   string                  `protobuf:"bytes,21,opt,name=git_commit_author,json=gitCommitAuthor,proto3" json:"git_commit_author,omitempty"`
	GitCommitDate     string                  `protobuf:"bytes,22,opt,name=git_commit_date,json=gitCommitDate,proto3" json:"git_commit_date,omitempty"`
	Version           int32                   `protobuf:"varint,23,opt,name=version,proto3" json:"version,omitempty"`
	RepoId            int32                   `protobuf:"varint,24,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	Repo              *RepoModel              `protobuf:"bytes,25,opt,name=repo,proto3" json:"repo,omitempty"`
	Namespace         *NamespaceModel         `protobuf:"bytes,50,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CreatedAt         string                  `protobuf:"bytes,100,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string                  `protobuf:"bytes,101,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt         string                  `protobuf:"bytes,102,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *ProjectModel) Reset() {
	*x = ProjectModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectModel) ProtoMessage() {}

func (x *ProjectModel) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectModel.ProtoReflect.Descriptor instead.
func (*ProjectModel) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{11}
}

func (x *ProjectModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectModel) GetGitProjectId() int32 {
	if x != nil {
		return x.GitProjectId
	}
	return 0
}

func (x *ProjectModel) GetGitBranch() string {
	if x != nil {
		return x.GitBranch
	}
	return ""
}

func (x *ProjectModel) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *ProjectModel) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ProjectModel) GetOverrideValues() string {
	if x != nil {
		return x.OverrideValues
	}
	return ""
}

func (x *ProjectModel) GetDockerImage() []string {
	if x != nil {
		return x.DockerImage
	}
	return nil
}

func (x *ProjectModel) GetPodSelectors() []string {
	if x != nil {
		return x.PodSelectors
	}
	return nil
}

func (x *ProjectModel) GetNamespaceId() int32 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *ProjectModel) GetAtomic() bool {
	if x != nil {
		return x.Atomic
	}
	return false
}

func (x *ProjectModel) GetEnvValues() []*KeyValue {
	if x != nil {
		return x.EnvValues
	}
	return nil
}

func (x *ProjectModel) GetExtraValues() []*websocket.ExtraValue {
	if x != nil {
		return x.ExtraValues
	}
	return nil
}

func (x *ProjectModel) GetFinalExtraValues() []*websocket.ExtraValue {
	if x != nil {
		return x.FinalExtraValues
	}
	return nil
}

func (x *ProjectModel) GetDeployStatus() Deploy {
	if x != nil {
		return x.DeployStatus
	}
	return Deploy_StatusUnknown
}

func (x *ProjectModel) GetHumanizeCreatedAt() string {
	if x != nil {
		return x.HumanizeCreatedAt
	}
	return ""
}

func (x *ProjectModel) GetHumanizeUpdatedAt() string {
	if x != nil {
		return x.HumanizeUpdatedAt
	}
	return ""
}

func (x *ProjectModel) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *ProjectModel) GetGitCommitWebUrl() string {
	if x != nil {
		return x.GitCommitWebUrl
	}
	return ""
}

func (x *ProjectModel) GetGitCommitTitle() string {
	if x != nil {
		return x.GitCommitTitle
	}
	return ""
}

func (x *ProjectModel) GetGitCommitAuthor() string {
	if x != nil {
		return x.GitCommitAuthor
	}
	return ""
}

func (x *ProjectModel) GetGitCommitDate() string {
	if x != nil {
		return x.GitCommitDate
	}
	return ""
}

func (x *ProjectModel) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProjectModel) GetRepoId() int32 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

func (x *ProjectModel) GetRepo() *RepoModel {
	if x != nil {
		return x.Repo
	}
	return nil
}

func (x *ProjectModel) GetNamespace() *NamespaceModel {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *ProjectModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProjectModel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ProjectModel) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type AccessTokenModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Email      string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	ExpiredAt  string `protobuf:"bytes,3,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`
	Usage      string `protobuf:"bytes,4,opt,name=usage,proto3" json:"usage,omitempty"`
	LastUsedAt string `protobuf:"bytes,5,opt,name=last_used_at,json=lastUsedAt,proto3" json:"last_used_at,omitempty"`
	IsDeleted  bool   `protobuf:"varint,6,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	IsExpired  bool   `protobuf:"varint,7,opt,name=is_expired,json=isExpired,proto3" json:"is_expired,omitempty"`
	CreatedAt  string `protobuf:"bytes,100,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  string `protobuf:"bytes,101,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt  string `protobuf:"bytes,102,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *AccessTokenModel) Reset() {
	*x = AccessTokenModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessTokenModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessTokenModel) ProtoMessage() {}

func (x *AccessTokenModel) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessTokenModel.ProtoReflect.Descriptor instead.
func (*AccessTokenModel) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{12}
}

func (x *AccessTokenModel) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AccessTokenModel) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AccessTokenModel) GetExpiredAt() string {
	if x != nil {
		return x.ExpiredAt
	}
	return ""
}

func (x *AccessTokenModel) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

func (x *AccessTokenModel) GetLastUsedAt() string {
	if x != nil {
		return x.LastUsedAt
	}
	return ""
}

func (x *AccessTokenModel) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *AccessTokenModel) GetIsExpired() bool {
	if x != nil {
		return x.IsExpired
	}
	return false
}

func (x *AccessTokenModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AccessTokenModel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *AccessTokenModel) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type RepoModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GitProjectId   int32        `protobuf:"varint,3,opt,name=git_project_id,json=gitProjectId,proto3" json:"git_project_id,omitempty"`
	GitProjectName string       `protobuf:"bytes,4,opt,name=git_project_name,json=gitProjectName,proto3" json:"git_project_name,omitempty"`
	Enabled        bool         `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	MarsConfig     *mars.Config `protobuf:"bytes,6,opt,name=mars_config,json=marsConfig,proto3" json:"mars_config,omitempty"`
	NeedGitRepo    bool         `protobuf:"varint,7,opt,name=need_git_repo,json=needGitRepo,proto3" json:"need_git_repo,omitempty"`
	Description    string       `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt      string       `protobuf:"bytes,100,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string       `protobuf:"bytes,101,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt      string       `protobuf:"bytes,102,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *RepoModel) Reset() {
	*x = RepoModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoModel) ProtoMessage() {}

func (x *RepoModel) ProtoReflect() protoreflect.Message {
	mi := &file_types_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoModel.ProtoReflect.Descriptor instead.
func (*RepoModel) Descriptor() ([]byte, []int) {
	return file_types_types_proto_rawDescGZIP(), []int{13}
}

func (x *RepoModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RepoModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RepoModel) GetGitProjectId() int32 {
	if x != nil {
		return x.GitProjectId
	}
	return 0
}

func (x *RepoModel) GetGitProjectName() string {
	if x != nil {
		return x.GitProjectName
	}
	return ""
}

func (x *RepoModel) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RepoModel) GetMarsConfig() *mars.Config {
	if x != nil {
		return x.MarsConfig
	}
	return nil
}

func (x *RepoModel) GetNeedGitRepo() bool {
	if x != nil {
		return x.NeedGitRepo
	}
	return false
}

func (x *RepoModel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RepoModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RepoModel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *RepoModel) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

var File_types_types_proto protoreflect.FileDescriptor

var file_types_types_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x0f, 0x6d, 0x61, 0x72, 0x73,
	0x2f, 0x6d, 0x61, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x77, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x22, 0xc7, 0x01,
	0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x4f, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x54, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xab, 0x07,
	0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x67, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x69, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x67, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x47, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x0a, 0x67, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x76, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x43,
	0x0a, 0x12, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x57, 0x65, 0x62, 0x55, 0x72, 0x6c,
	0x12, 0x28, 0x0a, 0x10, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x69, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x69,
	0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x94, 0x03, 0x0a, 0x0a,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f,
	0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6e, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61,
	0x73, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x44, 0x69, 0x66, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xd6, 0x02, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x75, 0x6d,
	0x61, 0x6e, 0x69, 0x7a, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd3, 0x02, 0x0a, 0x0f,
	0x47, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x69,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x67, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x31, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x25, 0x0a, 0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xed, 0x02,
	0x0a, 0x0e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x32, 0x0a,
	0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xd4, 0x08, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x69, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x67, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x69, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x69, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x12, 0x2e,
	0x0a, 0x0a, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x38,
	0x0a, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x32, 0x0a,
	0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x68, 0x75, 0x6d, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x68, 0x75, 0x6d, 0x61, 0x6e, 0x69, 0x7a, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x5f, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x57, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x12,
	0x28, 0x0a, 0x10, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x69, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x69, 0x74,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb0, 0x02, 0x0a, 0x10, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xeb, 0x02, 0x0a, 0x09,
	0x52, 0x65, 0x70, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x67, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67,
	0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x73, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d,
	0x61, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x67,
	0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e,
	0x65, 0x65, 0x64, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x9a, 0x01, 0x0a, 0x0f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x72, 0x79, 0x52,
	0x75, 0x6e, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x10, 0x07, 0x12,
	0x09, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04,
	0x45, 0x78, 0x65, 0x63, 0x10, 0x0a, 0x2a, 0x56, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x42, 0x2d,
	0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x75, 0x63,
	0x2d, 0x63, 0x6e, 0x7a, 0x6a, 0x2f, 0x6d, 0x61, 0x72, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x35, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_types_proto_rawDescOnce sync.Once
	file_types_types_proto_rawDescData = file_types_types_proto_rawDesc
)

func file_types_types_proto_rawDescGZIP() []byte {
	file_types_types_proto_rawDescOnce.Do(func() {
		file_types_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_types_proto_rawDescData)
	})
	return file_types_types_proto_rawDescData
}

var file_types_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_types_types_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_types_types_proto_goTypes = []interface{}{
	(EventActionType)(0),         // 0: types.EventActionType
	(Deploy)(0),                  // 1: types.Deploy
	(*Pod)(nil),                  // 2: types.Pod
	(*StateContainer)(nil),       // 3: types.StateContainer
	(*ServiceEndpoint)(nil),      // 4: types.ServiceEndpoint
	(*ChangelogModel)(nil),       // 5: types.ChangelogModel
	(*EventModel)(nil),           // 6: types.EventModel
	(*FileModel)(nil),            // 7: types.FileModel
	(*GitProjectModel)(nil),      // 8: types.GitProjectModel
	(*ImagePullSecret)(nil),      // 9: types.ImagePullSecret
	(*MemberModel)(nil),          // 10: types.MemberModel
	(*NamespaceModel)(nil),       // 11: types.NamespaceModel
	(*KeyValue)(nil),             // 12: types.KeyValue
	(*ProjectModel)(nil),         // 13: types.ProjectModel
	(*AccessTokenModel)(nil),     // 14: types.AccessTokenModel
	(*RepoModel)(nil),            // 15: types.RepoModel
	(*websocket.ExtraValue)(nil), // 16: websocket.ExtraValue
	(*mars.Config)(nil),          // 17: mars.Config
}
var file_types_types_proto_depIdxs = []int32{
	13, // 0: types.ChangelogModel.project:type_name -> types.ProjectModel
	8,  // 1: types.ChangelogModel.git_project:type_name -> types.GitProjectModel
	12, // 2: types.ChangelogModel.env_values:type_name -> types.KeyValue
	16, // 3: types.ChangelogModel.extra_values:type_name -> websocket.ExtraValue
	16, // 4: types.ChangelogModel.final_extra_values:type_name -> websocket.ExtraValue
	0,  // 5: types.EventModel.action:type_name -> types.EventActionType
	7,  // 6: types.EventModel.file:type_name -> types.FileModel
	17, // 7: types.GitProjectModel.global_config:type_name -> mars.Config
	13, // 8: types.NamespaceModel.projects:type_name -> types.ProjectModel
	10, // 9: types.NamespaceModel.members:type_name -> types.MemberModel
	12, // 10: types.ProjectModel.env_values:type_name -> types.KeyValue
	16, // 11: types.ProjectModel.extra_values:type_name -> websocket.ExtraValue
	16, // 12: types.ProjectModel.final_extra_values:type_name -> websocket.ExtraValue
	1,  // 13: types.ProjectModel.deploy_status:type_name -> types.Deploy
	15, // 14: types.ProjectModel.repo:type_name -> types.RepoModel
	11, // 15: types.ProjectModel.namespace:type_name -> types.NamespaceModel
	17, // 16: types.RepoModel.mars_config:type_name -> mars.Config
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_types_types_proto_init() }
func file_types_types_proto_init() {
	if File_types_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangelogModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitProjectModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagePullSecret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessTokenModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_types_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_types_proto_goTypes,
		DependencyIndexes: file_types_types_proto_depIdxs,
		EnumInfos:         file_types_types_proto_enumTypes,
		MessageInfos:      file_types_types_proto_msgTypes,
	}.Build()
	File_types_types_proto = out.File
	file_types_types_proto_rawDesc = nil
	file_types_types_proto_goTypes = nil
	file_types_types_proto_depIdxs = nil
}
